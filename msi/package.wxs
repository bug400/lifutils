<?xml version="1.0" ?>
<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs" xmlns:ui="http://wixtoolset.org/schemas/v4/wxs/ui">

<!--
This is the generic part of Wix 6 sources to generate MSI installer files.

The product specific parts: 
- package.wxi: product specific definitions
- components.wxs. installable components

are in the windows directory

The WixUI_InstallDir user interface is utilized, which has a configurable install directory but does not
provide selectable features. A system wide installation is possible by setting the command line parameter
ALLUSER=1.

-->

 <?include package.wxi ?>

 <Package Name="$(var.InstallName)" Manufacturer="$(var.Manufacturer)" ProductCode="*" UpgradeCode="$(var.UpgradeCode)" Language="1033" Codepage="1252" Version="$(var.Version)" Scope="perUserOrMachine">

  <!--
     This is the only unambiguos information to determine a Windows version 10/11, Windows 11 is also #10
  -->
  <Property Id="OSMAJORVERSION">
     <RegistrySearch Id="OSVersionSearch" Root="HKLM" Key="Software\Microsoft\Windows NT\CurrentVersion" Name="CurrentMajorVersionNumber" Type="raw" />
  </Property>
  
  <!--
     Check the registry if we have an old NSIS local machine installation. We need the property NSIS_ALLUSERS
     to terminate the attempt to do a local machine installation with this installer
  -->
  <Property Id="NSIS_ALLUSERS">
     <RegistrySearch Id="NSISSearchLM" Root="HKLM" Key="Software\Microsoft\Windows\CurrentVersion\Uninstall\$(var.NSISGuid)" Name="UninstallString" Type="raw" />
  </Property>

  <!--
     Check the registry if we have an old NSIS current user installation. We need the property 
     NSIS_CURRENTUSERS to terminate the attempt to do a current machine installation with this installer
  -->
  <Property Id="NSIS_CURRENTUSERS">
     <RegistrySearch Id="NSISSearchCU" Root="HKCU" Key="Software\Microsoft\Windows\CurrentVersion\Uninstall\$(var.NSISGuid)" Name="UninstallString" Type="raw" />
  </Property>

  <!-- 
     Initialize the property ASSISTANCE_USERS which sets the installation scope later in the UI. Only used
     if WixUI_InstallDirSelectScope is used
  <Property Id="ASSISTANCE_USERS" Value= "cur"/>
  -->

  <!--
     Set productname according to installation scope
  -->
  <Property Id="ConditionalProductName" Value="$(var.InstallName) $(var.Version) (current user)" /> 
  <SetProperty Id="ConditionalProductName" Before="LaunchConditions" Value="$(var.InstallName) $(var.Version) (all users)" Condition = "ALLUSERS" />
  <SetProperty Id="ProductName" Before="LaunchConditions" Value="[ConditionalProductName]" />

  <!--
     Other package settings
  -->
  <SummaryInformation Keywords="Installer" Description="$(var.InstallName) $(var.Version)" Manufacturer="$(var.Manufacturer)"/>
  <MajorUpgrade DowngradeErrorMessage="A newer version of $(var.InstallName) is already installed. Deinstall it manually first." AllowSameVersionUpgrades="yes" />
  <Media Id="1" Cabinet="$(var.InstallName).cab" EmbedCab="yes"/>

  <?if $(var.Icon)  ?>
     <Icon Id="icon.ico" SourceFile="$(var.Icon)" />
     <Property Id="ARPPRODUCTICON" Value="icon.ico" />
  <?endif ?>

  <StandardDirectory Id="$(var.PlatformProgramFilesFolder)">
    <Directory Id="INSTALLDIR" Name="$(var.InstallName)"/>
  </StandardDirectory>

  <!--
     Do not launch a 32 bit package on a 54 bit Windows. We use the existence of the VersionNT64 property here
  -->
  <?if $(env.Platform) = "x86" ?>
    <Launch Message = "This MSI file requires a 32bit Windows 10/11" Condition="NOT VersionNT64"/>
  <?endif ?>

  <!--
     Launch only on Windows 10/11
  -->
  <Launch Condition="OSMAJORVERSION &gt;&lt; &quot;#10&quot;" Message="[ProductName] requires Windows10/11." />

  <!--
     Do not launch, if any NSIS Installer version of this product is installed
  -->
  <Launch Condition="(NSIS_CURRENTUSERS = &quot;&quot;) AND (NSIS_ALLUSERS = &quot;&quot;)" Message="A $(var.InstallName) installation with an incompatible installer was found. Please deinstall all instances of this version first." />

  <ui:WixUI Id="WixUI_InstallDir" InstallDirectory="INSTALLDIR"/>

  <Feature Id="Complete" Title="$(var.InstallName) $(var.Version)" Description="The complete package" Display="expand" Level="1" ConfigurableDirectory="INSTALLDIR" AllowAbsent="no">
    <ComponentGroupRef Id="Components"/>
  </Feature>
 </Package>
</Wix>
